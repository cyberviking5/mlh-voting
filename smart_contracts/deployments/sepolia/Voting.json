{
  "address": "0xbbA0aC0e74d7d4122F4e3a570B6dABB803720931",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_option",
          "type": "uint8"
        }
      ],
      "name": "getTotalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWinningOption",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_option",
          "type": "uint8"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "votes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc68ba08a073538c8b67d5fbb99b3d6a7a6a82157572fd6a7c3f66640ceec3517",
  "receipt": {
    "to": null,
    "from": "0xc3c00e57421D8A75dadbD7b1469B94F44f4d6588",
    "contractAddress": "0xbbA0aC0e74d7d4122F4e3a570B6dABB803720931",
    "transactionIndex": 31,
    "gasUsed": "436807",
    "logsBloom": "0x
    "blockHash": "0xda3f4ac95d03ffa067a9c26f3b774fd25db811e2b936085e9506d3c6f9232e9f",
    "transactionHash": "0xc68ba08a073538c8b67d5fbb99b3d6a7a6a82157572fd6a7c3f66640ceec3517",
    "logs": [],
    "blockNumber": 6091091,
    "cumulativeGasUsed": "5059098",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "b15d74cc2800db4cb5dc66ca9a1c90c3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_option\",\"type\":\"uint8\"}],\"name\":\"getTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinningOption\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_option\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Voting.sol\":\"Voting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Voting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract Voting {\\n    uint8 constant Option1 = 1;\\n    uint8 constant Option2 = 2;\\n\\n    mapping(uint8 => uint256) public votes;\\n    mapping(address => bool) public hasVoted;\\n\\n    function vote(uint8 _option) public {\\n        require(_option == Option1 || _option == Option2, \\\"Invalid option\\\");\\n        require(!hasVoted[msg.sender], \\\"You have already voted\\\");\\n        votes[_option]++;\\n        hasVoted[msg.sender] = true;\\n    }\\n\\n    function getWinningOption() public view returns (uint8) {\\n        if (votes[Option1] > votes[Option2]) {\\n            return Option1;\\n        } else if (votes[Option2] > votes[Option1]) {\\n            return Option2;\\n        } else {\\n            return Option1;\\n        }\\n    }\\n\\n    function getTotalVotes(uint8 _option) public view returns (uint256) {\\n        require(_option == Option1 || _option == Option2, \\\"Invalid option\\\");\\n        return votes[_option];\\n    }\\n}\\n\",\"keccak256\":\"0xe2cdc9ae990a592d91b258c7b8ecb22d5da6f52ab83e1b2de84ac2726fc8f613\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506106f9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806309eef43e1461005c5780637eeb45201461008c578063b3f98adc146100aa578063c1b43357146100c6578063e110fb83146100f6575b600080fd5b6100766004803603810190610071919061043c565b610126565b6040516100839190610484565b60405180910390f35b610094610146565b6040516100a191906104bb565b60405180910390f35b6100c460048036038101906100bf9190610502565b6101d6565b005b6100e060048036038101906100db9190610502565b610345565b6040516100ed9190610548565b60405180910390f35b610110600480360381019061010b9190610502565b61035d565b60405161011d9190610548565b60405180910390f35b60016020528060005260406000206000915054906101000a900460ff1681565b6000806000600260ff1660ff16815260200190815260200160002054600080600160ff1660ff16815260200190815260200160002054111561018b57600190506101d3565b600080600160ff1660ff16815260200190815260200160002054600080600260ff1660ff1681526020019081526020016000205411156101ce57600290506101d3565b600190505b90565b600160ff168160ff1614806101f15750600260ff168160ff16145b610230576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610227906105c0565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b49061062c565b60405180910390fd5b6000808260ff1660ff16815260200190815260200160002060008154809291906102e69061067b565b919050555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60006020528060005260406000206000915090505481565b6000600160ff168260ff16148061037a5750600260ff168260ff16145b6103b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b0906105c0565b60405180910390fd5b6000808360ff1660ff168152602001908152602001600020549050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610409826103de565b9050919050565b610419816103fe565b811461042457600080fd5b50565b60008135905061043681610410565b92915050565b600060208284031215610452576104516103d9565b5b600061046084828501610427565b91505092915050565b60008115159050919050565b61047e81610469565b82525050565b60006020820190506104996000830184610475565b92915050565b600060ff82169050919050565b6104b58161049f565b82525050565b60006020820190506104d060008301846104ac565b92915050565b6104df8161049f565b81146104ea57600080fd5b50565b6000813590506104fc816104d6565b92915050565b600060208284031215610518576105176103d9565b5b6000610526848285016104ed565b91505092915050565b6000819050919050565b6105428161052f565b82525050565b600060208201905061055d6000830184610539565b92915050565b600082825260208201905092915050565b7f496e76616c6964206f7074696f6e000000000000000000000000000000000000600082015250565b60006105aa600e83610563565b91506105b582610574565b602082019050919050565b600060208201905081810360008301526105d98161059d565b9050919050565b7f596f75206861766520616c726561647920766f74656400000000000000000000600082015250565b6000610616601683610563565b9150610621826105e0565b602082019050919050565b6000602082019050818103600083015261064581610609565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106868261052f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106b8576106b761064c565b5b60018201905091905056fea26469706673582212203d1103f9628fbddca83ca62f45e3cbf5ba82efd68532335162416bc9960676a664736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806309eef43e1461005c5780637eeb45201461008c578063b3f98adc146100aa578063c1b43357146100c6578063e110fb83146100f6575b600080fd5b6100766004803603810190610071919061043c565b610126565b6040516100839190610484565b60405180910390f35b610094610146565b6040516100a191906104bb565b60405180910390f35b6100c460048036038101906100bf9190610502565b6101d6565b005b6100e060048036038101906100db9190610502565b610345565b6040516100ed9190610548565b60405180910390f35b610110600480360381019061010b9190610502565b61035d565b60405161011d9190610548565b60405180910390f35b60016020528060005260406000206000915054906101000a900460ff1681565b6000806000600260ff1660ff16815260200190815260200160002054600080600160ff1660ff16815260200190815260200160002054111561018b57600190506101d3565b600080600160ff1660ff16815260200190815260200160002054600080600260ff1660ff1681526020019081526020016000205411156101ce57600290506101d3565b600190505b90565b600160ff168160ff1614806101f15750600260ff168160ff16145b610230576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610227906105c0565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b49061062c565b60405180910390fd5b6000808260ff1660ff16815260200190815260200160002060008154809291906102e69061067b565b919050555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60006020528060005260406000206000915090505481565b6000600160ff168260ff16148061037a5750600260ff168260ff16145b6103b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b0906105c0565b60405180910390fd5b6000808360ff1660ff168152602001908152602001600020549050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610409826103de565b9050919050565b610419816103fe565b811461042457600080fd5b50565b60008135905061043681610410565b92915050565b600060208284031215610452576104516103d9565b5b600061046084828501610427565b91505092915050565b60008115159050919050565b61047e81610469565b82525050565b60006020820190506104996000830184610475565b92915050565b600060ff82169050919050565b6104b58161049f565b82525050565b60006020820190506104d060008301846104ac565b92915050565b6104df8161049f565b81146104ea57600080fd5b50565b6000813590506104fc816104d6565b92915050565b600060208284031215610518576105176103d9565b5b6000610526848285016104ed565b91505092915050565b6000819050919050565b6105428161052f565b82525050565b600060208201905061055d6000830184610539565b92915050565b600082825260208201905092915050565b7f496e76616c6964206f7074696f6e000000000000000000000000000000000000600082015250565b60006105aa600e83610563565b91506105b582610574565b602082019050919050565b600060208201905081810360008301526105d98161059d565b9050919050565b7f596f75206861766520616c726561647920766f74656400000000000000000000600082015250565b6000610616601683610563565b9150610621826105e0565b602082019050919050565b6000602082019050818103600083015261064581610609565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106868261052f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106b8576106b761064c565b5b60018201905091905056fea26469706673582212203d1103f9628fbddca83ca62f45e3cbf5ba82efd68532335162416bc9960676a664736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11,
        "contract": "contracts/Voting.sol:Voting",
        "label": "votes",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint8,t_uint256)"
      },
      {
        "astId": 15,
        "contract": "contracts/Voting.sol:Voting",
        "label": "hasVoted",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint8,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}